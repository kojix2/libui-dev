diff --git a/darwin/menu.m b/darwin/menu.m
index 54c05b3c..ff8e69f5 100644
--- a/darwin/menu.m
+++ b/darwin/menu.m
@@ -59,6 +59,8 @@ - (IBAction)onClicked:(id)sender
 		return;
 	}
 
+	NSWindow* keyWindow;
+
 	switch (self->item->type) {
 	case typeQuit:
 		if (uiprivShouldQuit())
@@ -68,8 +70,14 @@ - (IBAction)onClicked:(id)sender
 		uiMenuItemSetChecked(self->item, !uiMenuItemChecked(self->item));
 		// fall through
 	default:
+		keyWindow = [uiprivNSApp() keyWindow];
+		if (!keyWindow) {
+			uiprivImplBug("NSApp.keyWidnow is nil");
+			return;
+		}
+
 		// use the key window as the source of the menu event; it's the active window
-		(*(self->item->onClicked))(self->item, uiprivWindowFromNSWindow([uiprivNSApp() keyWindow]),
+		(*(self->item->onClicked))(self->item, uiprivWindowFromNSWindow(keyWindow),
 			self->item->onClickedData);
 		break;
 	}
diff --git a/darwin/stddialogs.m b/darwin/stddialogs.m
index d6d55547..096ec606 100644
--- a/darwin/stddialogs.m
+++ b/darwin/stddialogs.m
@@ -22,12 +22,28 @@ static void setupSavePanel(NSSavePanel *s)
 static char *runSavePanel(NSWindow *parent, NSSavePanel *s)
 {
 	char *filename;
+	NSInteger result;
+	NSWindow* keyWindow;
+
+	if (parent) {
+		keyWindow = [uiprivNSApp() keyWindow];
+
+		[s beginSheetModalForWindow:parent completionHandler:^(NSInteger result) {
+			[uiprivNSApp() stopModalWithCode:result];
+		}];
+		result = [uiprivNSApp() runModalForWindow:s];
+
+		// Explicitly set a window as the key window, as it can be nil under certain circumstances.
+		// (https://github.com/libui-ng/libui-ng/issues/288)
+		if (keyWindow)
+			[keyWindow makeKeyWindow];
+	} else {
+		result = [s runModal];
+	}
 
-	[s beginSheetModalForWindow:parent completionHandler:^(NSInteger result) {
-		[uiprivNSApp() stopModalWithCode:result];
-	}];
-	if ([uiprivNSApp() runModalForWindow:s] != NSFileHandlingPanelOKButton)
+	if (result != NSFileHandlingPanelOKButton)
 		return NULL;
+
 	filename = uiDarwinNSStringToText([[s URL] path]);
 	return filename;
 }
@@ -94,6 +110,9 @@ - (id)initWithPanel:(NSAlert *)p parent:(NSWindow *)w
 
 - (NSInteger)run
 {
+	if (!self->parent)
+		return [self->panel runModal];
+
 	[self->panel beginSheetModalForWindow:self->parent
 		modalDelegate:self
 		didEndSelector:@selector(panelEnded:result:data:)
@@ -112,7 +131,9 @@ static void msgbox(NSWindow *parent, const char *title, const char *description,
 {
 	NSAlert *a;
 	libuiCodeModalAlertPanel *cm;
+	NSWindow* keyWindow;
 
+	keyWindow = [uiprivNSApp() keyWindow];
 	a = [NSAlert new];
 	[a setAlertStyle:style];
 	[a setShowsHelp:NO];
@@ -124,6 +145,11 @@ static void msgbox(NSWindow *parent, const char *title, const char *description,
 	[cm run];
 	[cm release];
 	[a release];
+
+	// Explicitly set a window as the key window, as it can be nil under certain circumstances.
+	// (https://github.com/libui-ng/libui-ng/issues/288)
+	if (keyWindow)
+		[keyWindow makeKeyWindow];
 }
 
 void uiMsgBox(uiWindow *parent, const char *title, const char *description)
